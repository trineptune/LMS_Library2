// <auto-generated />
using ExamWebApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ExamWebApi.Migrations
{
    [DbContext(typeof(ExamDbContext))]
    [Migration("20231005024347_UpdateExamdb")]
    partial class UpdateExamdb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ExamWebApi.Models.EssayAnswer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Answer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EssayId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EssayId");

                    b.ToTable("EssayAnswers");
                });

            modelBuilder.Entity("ExamWebApi.Models.EssayExam", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ExamId")
                        .HasColumnType("int");

                    b.Property<string>("Titlte")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ExamId");

                    b.ToTable("EssayExams");
                });

            modelBuilder.Entity("ExamWebApi.Models.Exam", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("SubjectId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<bool>("approve")
                        .HasColumnType("bit");

                    b.Property<int>("time")
                        .HasColumnType("int");

                    b.Property<string>("type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Exams");
                });

            modelBuilder.Entity("ExamWebApi.Models.ExamAnswer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsCorrect")
                        .HasColumnType("bit");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.ToTable("ExamAnswers");
                });

            modelBuilder.Entity("ExamWebApi.Models.ExamContent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ExamId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ExamId");

                    b.ToTable("ExamContents");
                });

            modelBuilder.Entity("ExamWebApi.Models.EssayAnswer", b =>
                {
                    b.HasOne("ExamWebApi.Models.EssayExam", "EssayExam")
                        .WithMany("EssayAnswer")
                        .HasForeignKey("EssayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EssayExam");
                });

            modelBuilder.Entity("ExamWebApi.Models.EssayExam", b =>
                {
                    b.HasOne("ExamWebApi.Models.Exam", "Exam")
                        .WithMany("EssayExam")
                        .HasForeignKey("ExamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exam");
                });

            modelBuilder.Entity("ExamWebApi.Models.ExamAnswer", b =>
                {
                    b.HasOne("ExamWebApi.Models.ExamContent", "ExamContent")
                        .WithMany("ExamAnswer")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExamContent");
                });

            modelBuilder.Entity("ExamWebApi.Models.ExamContent", b =>
                {
                    b.HasOne("ExamWebApi.Models.Exam", "Exam")
                        .WithMany("ExamContent")
                        .HasForeignKey("ExamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exam");
                });

            modelBuilder.Entity("ExamWebApi.Models.EssayExam", b =>
                {
                    b.Navigation("EssayAnswer");
                });

            modelBuilder.Entity("ExamWebApi.Models.Exam", b =>
                {
                    b.Navigation("EssayExam");

                    b.Navigation("ExamContent");
                });

            modelBuilder.Entity("ExamWebApi.Models.ExamContent", b =>
                {
                    b.Navigation("ExamAnswer");
                });
#pragma warning restore 612, 618
        }
    }
}
